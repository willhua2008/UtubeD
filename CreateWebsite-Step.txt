/* 开发步骤---做一个简单修改。
---*********************VScode & Github---
1. 使用brew安装
brew update
brew install git
2. Xcode要安装好
xcode-select --install
3. 确认git版本
git --version
4. 管理git账号
git config --global user.name "您的名字"
git config --global user.email "您的邮箱"
5. VS Code 的终端，输入以下命令
git clone [复制的 URL]
6.**** commit & Push不好用的时候，在Mac terminal里面执行下面的命令。
cd 路径到您的仓库
git add .
git commit -m "您的提交信息"
git push
---*********************VScode & Github---
环境搭建:

1.在OCI VM上安装Node.js、Express.js和Oracle数据库客户端。 -已完成 
1. 安装 Node.js
0）sudo yum update
1） 添加 Node.js 仓库:
您可以使用 NodeSource 仓库来安装最新版本的 Node.js。以下命令将添加 Node.js 14.x 仓库（您也可以选择其他版本，如 12.x 或 16.x）：
curl -sL https://rpm.nodesource.com/setup_18.x | sudo bash -
2） 使用以下命令安装 Node.js：
sudo yum install nodejs
3）安装完成后，您可以通过检查 Node.js 和 npm（Node的包管理器）的版本来验证安装
node -v
npm -v

2. 安装 Express.js
在安装了 Node.js 之后，您可以全局安装 Express.js 生成器或在特定项目中局部安装 Express。
1)全局安装 Express 生成器（可选）:
如果您希望使用 Express 生成器来快速开始新的 Express 应用，运行
sudo npm install -g express-generator
2)创建您的项目:
创建一个新目录作为您项目的工作空间，并进入这个目录：
mkdir myExpressApp
cd myExpressApp
3)初始化 Node.js 应用:
初始化一个新的 Node.js 应用：
npm init
按照提示完成 package.json 文件的创建。
{
  "name": "utubeweb",
  "version": "1.0.0",
  "description": "downloader demo",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/willhua2008/UtubeD.git"
  },
  "keywords": [
    "youtube"
  ],
  "author": "HuaJ",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/willhua2008/UtubeD/issues"
  },
  "homepage": "https://github.com/willhua2008/UtubeD#readme"
}

4) 安装 Express:
在您的项目中安装 Express：
npm install express --save
这会将 Express 添加到您的项目依赖中。

3. 开始您的第一个 Express 应用
1) 创建一个简单的 Express 应用:
在项目目录中创建一个名为 app.js 的文件（放在myExpressApp根目录下面就可以），并添加以下代码：
const express = require('express');
const app = express();

app.get('/', (req, res) => {
  res.send('Hello World!');
});

app.listen(3000, () => {
  console.log('Example app listening on port 3000!');
});
2) 运行您的应用:
在终端中，运行以下命令来启动您的 Express 应用：
node app.js
访问 http://localhost:3000，您应该会看到 “Hello World!” 的消息
http://152.70.252.36:3000/

4. ADW-创建用户
CREATE USER web_user IDENTIFIED BY Win2024Janu_1234

CREATE TABLE videos (
    video_id INT PRIMARY KEY,
    title VARCHAR2(100),
    youtube_url VARCHAR2(200) NOT NULL,
    download_status VARCHAR2(20) DEFAULT 'PENDING',
    downloaded_at TIMESTAMP,
    stored_path VARCHAR2(200)
);

CREATE TABLE users (
    user_id INT PRIMARY KEY,
    username VARCHAR2(50) NOT NULL,
    password VARCHAR2(50) NOT NULL,
    email VARCHAR2(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP
);

5.安装和配置oracledbnpm包以连接ADW。
1) 安装clinet
sudo dnf install oracle-instantclient-release-el8
sudo dnf install oracle-instantclient-basic
2） 设置环境变量-
vim .bashrc
export LD_LIBRARY_PATH=/usr/lib/oracle/21/client64/lib:$LD_LIBRARY_PATH
source ~/.bashrc
3) 安装 Node.js Oracle 数据库驱动
cd myExpressApp/
npm install oracledb

4) 建立连接DB 文件
vim .bashrc
export WEB_USER_DB_PASS='Win2024Janu_1234'
source ~/.bashrc
=====Code=====
const oracledb = require('oracledb');

async function initDB() {
    try {
        await oracledb.createPool({
            user: 'WEB_USER',
            password: process.env.WEB_USER_DB_PASS, // 使用环境变量
            connectString: '(description= (retry_count=20)(retry_delay=3)(address=(protocol=tcps)(port=1522)(host=adb.ap-seoul-1.oraclecloud.com))(connect_data=(service_name=g5a584c1e83499a_huatest_high.adb.oraclecloud.com))(security=(ssl_server_dn_match=yes)))'
        });
        console.log('Connection Pool is Successful');
    } catch (err) {
        console.error('Connection Pool Failed: ', err);
    }
}


async function getConnection() {
    return await oracledb.getConnection();
}

module.exports = {
    initDB,
    getConnection
};

=====Code=====
5)修改app.js
const express = require('express');
const { initDB } = require('./database'); // 引用数据库初始化函数

const app = express();
// 初始化数据库
initDB();

// 测试数据库连接的路由
app.get('/test-db', async (req, res) => {
    try {
        const connection = await getConnection();
        const result = await connection.execute('SELECT * FROM users');
        await connection.close();

        res.json(result.rows);
    } catch (err) {
        console.error(err);
        res.status(500).send('Can not connnect to ADW!');
    }
});

app.get('/', (req, res) => {
    res.send('Hello World!' + '测试中文是否好用！');
    //res.send('测试中文是否好用2！');
});

app.listen(3000, () => {
    console.log('Example app listening on port 3000!');
});


6) 在VM上面运行
cd UtubeD/
git pull origin main
node app.js
//Example app listening on port 3000!
//Connection Pool is Successful

7）测试URL
http://152.70.252.36:3000/test-db

现在的问题 - Error: NJS-511: connection to listener at host 192.29.30.216 port 1522 was refused. (CONNECTION_ID=8iNl132VyHXWfOpfMuexDg==)
Cause: ORA-12506
    at Object.throwErr (/home/opc/myExpressApp/node_modules/oracledb/lib/errors.js:603:10)
    at NetworkSession.connect2 (/home/opc/myExpressApp/node_modules/oracledb/lib/thin/sqlnet/networkSession.js:238:18)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async NetworkSession.connect1 (/home/opc/myExpressApp/node_modules/oracledb/lib/thin/sqlnet/networkSession.js:314:23)
    at async NetworkSession.connect (/home/opc/myExpressApp/node_modules/oracledb/lib/thin/sqlnet/networkSession.js:530:5)
    at async ThinConnectionImpl.connect (/home/opc/myExpressApp/node_modules/oracledb/lib/thin/connection.js:628:5)
    at async ThinPoolImpl.bgThreadFunc (/home/opc/myExpressApp/node_modules/oracledb/lib/thin/pool.js:420:11) {
  code: 'NJS-511'











后端开发:

使用Express.js建立基本的服务器、路由和与ADW的连接。
实现所需的API，进行数据库操作。
数据库设计:

在ADW中创建表格，并设计合适的模式来满足应用需求。
前端开发:

使用Vue.js和Bootstrap设计和实现前端界面。
视频下载和存储逻辑:

实现视频下载逻辑并将下载信息存储在ADW中。
测试和优化:

进行全面的功能和性能测试。
部署:

将完整的应用部署在Oracle Linux VM上。
*/